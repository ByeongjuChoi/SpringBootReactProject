{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Login(){const[id,setId]=useState(\"\");/*\t\r\n\tuseEffect(() => {\r\n\t\taxios.get(\"http://localhost:8080/api/message\")\r\n\t\t\t.then(response => {\r\n\t\t\t\tsetMessage(response.data);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.error(\"Error: \", error);\r\n\t\t\t});\r\n\t}, []);\r\n*/// 회원가입 api 호출\nconst entryMemner=async()=>{try{const response=await fetch('http://localhost:8080/api/v1/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id:id})});if(response.ok){console.log('Comment updated successfully');fetchComments();// 댓글 목록 다시 가져오기\n}else{console.error('Failed to update comment');}}catch(error){console.error('Error while updating comment:',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login Page\"}),\"ID: \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:id,onChange:e=>setId(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{value:회원가입,onClick:entryMemner})]});}","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","Login","id","setId","entryMemner","response","fetch","method","headers","body","JSON","stringify","ok","console","log","fetchComments","error","children","type","value","onChange","e","target","회원가입","onClick"],"sources":["C:/workspace_OtherProject/project/src/main/webapp/src/Login.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nexport default function Login() {\r\n\tconst [id, setId] = useState(\"\");\r\n/*\t\r\n\tuseEffect(() => {\r\n\t\taxios.get(\"http://localhost:8080/api/message\")\r\n\t\t\t.then(response => {\r\n\t\t\t\tsetMessage(response.data);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.error(\"Error: \", error);\r\n\t\t\t});\r\n\t}, []);\r\n*/\t\r\n\r\n\t// 회원가입 api 호출\r\n    const entryMemner = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8080/api/v1/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    id: id,\r\n                }),\r\n            });\r\n            if (response.ok) {\r\n                console.log('Comment updated successfully');\r\n                fetchComments(); // 댓글 목록 다시 가져오기\r\n            } else {\r\n                console.error('Failed to update comment');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error while updating comment:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Login Page</h1>\r\n\t\t\tID: <input type=\"text\" value={id} onChange={(e) => setId(e.target.value)} />\r\n\t\t\t<button value={회원가입} onClick={entryMemner}/>\r\n\t\t</div>\r\n\t)\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,cAAe,SAAS,CAAAC,KAAKA,CAAA,CAAG,CAC/B,KAAM,CAACC,EAAE,CAAEC,KAAK,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEC;AACG,KAAM,CAAAS,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,oCAAoC,CAAE,CAC/DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjBT,EAAE,CAAEA,EACR,CAAC,CACL,CAAC,CAAC,CACF,GAAIG,QAAQ,CAACO,EAAE,CAAE,CACbC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC3CC,aAAa,CAAC,CAAC,CAAE;AACrB,CAAC,IAAM,CACHF,OAAO,CAACG,KAAK,CAAC,0BAA0B,CAAC,CAC7C,CACJ,CAAE,MAAOA,KAAK,CAAE,CACZH,OAAO,CAACG,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACzD,CACJ,CAAC,CAIJ,mBACChB,KAAA,QAAAiB,QAAA,eACCnB,IAAA,OAAAmB,QAAA,CAAI,YAAU,CAAI,CAAC,OACf,cAAAnB,IAAA,UAAOoB,IAAI,CAAC,MAAM,CAACC,KAAK,CAAEjB,EAAG,CAACkB,QAAQ,CAAGC,CAAC,EAAKlB,KAAK,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAE,CAAC,cAC5ErB,IAAA,WAAQqB,KAAK,CAAEI,IAAK,CAACC,OAAO,CAAEpB,WAAY,CAAC,CAAC,EACxC,CAAC,CAER","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}